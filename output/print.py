import os

PIPE = "│"
ELBOW = "└──"
TEE = "├──"
PIPE_PREFIX = "│   "
SPACE_PREFIX = "    " 

def print_tree(dictionary):
    print(str(next(iter(dictionary))).split(os.sep)[0] + os.sep)

    file_index = 0
    for path in dictionary:
        connector = ELBOW if file_index == len(dictionary) - 1 else TEE
        file_index += 1

        print(connector, path)

        st_index = 0
        for search_term, values in dictionary[path].items():
            prefix = SPACE_PREFIX if file_index == len(dictionary) else PIPE_PREFIX
            connector = ELBOW if st_index == len(dictionary[path]) - 1 else TEE
            st_index += 1

            print(prefix, connector, search_term)

            lib_index = 0         
            for lib in values:
                prefix = SPACE_PREFIX if file_index == len(dictionary) else PIPE_PREFIX
                prefix += ' '
                prefix += SPACE_PREFIX if st_index == len(dictionary[path]) else PIPE_PREFIX
                connector = ELBOW if lib_index == len(values) - 1 else TEE
                lib_index += 1

                print(prefix, connector, lib)

def print_descriptions_tree(dictionary):
    print(str(next(iter(dictionary))).split(os.sep)[0] + os.sep)

    file_index = 0
    for path in dictionary:
        connector = ELBOW if file_index == len(dictionary) - 1 else TEE
        file_index += 1

        print(connector, path)

        st_index = 0
        for search_term, values in dictionary[path].items():
            prefix = SPACE_PREFIX if file_index == len(dictionary) else PIPE_PREFIX
            connector = ELBOW if st_index == len(dictionary[path]) - 1 else TEE
            st_index += 1

            print(prefix, connector, search_term)

            lib_index = 0         
            for lib in values:
                prefix = SPACE_PREFIX if file_index == len(dictionary) else PIPE_PREFIX
                prefix += ' '
                prefix += SPACE_PREFIX if st_index == len(dictionary[path]) else PIPE_PREFIX
                connector = ELBOW if lib_index == len(values) - 1 else TEE
                lib_index += 1

                if 'description' in lib and lib['description'] != "":
                    print(prefix, connector, lib['id'] + ': ' + lib['description'])
                else:
                    print(prefix, connector, lib['id'])

                if 'group' in lib:
                    group_index = 0         
                    for group in lib['group']:
                        prefix = SPACE_PREFIX if file_index == len(dictionary) else PIPE_PREFIX
                        prefix += ' '
                        prefix += SPACE_PREFIX if st_index == len(dictionary[path]) else PIPE_PREFIX
                        prefix += ' '
                        prefix += SPACE_PREFIX if lib_index == len(values) else PIPE_PREFIX
                        connector = ELBOW if group_index == len(lib['group']) - 1 else TEE
                        group_index += 1

                        print(prefix, connector, group['id'] + ': ' + group['description'])