import argparse, os

def get_data_frequency(dictionary):
    distribution = {}
    for path, values in dictionary.items():
        for lib in values:
            if lib not in list(distribution.keys()): 
                distribution[lib] = 1
            else:
                distribution[lib] += 1
    
    ordered_distribution = dict(sorted(distribution.items(), key = lambda kv: (kv[1], kv[0]), reverse=True))

    return ordered_distribution

def check_positive(value):
    ivalue = int(value)
    if ivalue <= 0:
        raise argparse.ArgumentTypeError("%s is an invalid positive int value" % value)
    return ivalue

def check_path(value):
    if os.path.isfile(value) or os.path.isdir(value):
        return value
    else:
        raise argparse.ArgumentTypeError("%s is an invalid path" % value)